## ¿QUÉ ES?

Este modelo crea formas 3D a partir de tortugas 2D al mapear tortugas entre coordenadas tridimensionales cartesianas y esféricas.

##  COMO FUNCIONA

Para crear las formas 3D, el programa aleatoriamente genera tortugas en el caparazón de la forma en coordenadas cartesianas (x, y, z) o esféricas (theta, phi, z), dependiendo de cuál sea más fácil de lograr pero siempre guarda la información convirtiéndolo cuando sea necesario en coordenadas esféricas. Para renderizar la esfera en la vista de NetLogo, traduce las tortugas de coordenadas esféricas a cartesianas usando el color para simular profundidad. Las posiciones de las tortugas siempre se guardan como coordenadas esféricas porque se rotan en el eje z, y la forma más simple de hacerlo es aumentar theta en coordenadas esféricas.

Conversión de coordenadas cartesianas a esféricas:

>x = r * cos(theta) = p * sin(phi) * cos(theta)
>y = r * sin(theta) = p * sin(phi) * sin(theta)
>z = p * cos(theta)

theta: ángulo de proyección de la tortuga en el plano x-y.
phi: ángulo de incidencia de las tortugas con respecto al eje z.
p: distancia de la tortuga desde el origen.

##  COMO USARLO

Haz clic en los diferentes botones de preparar-FORMA para generar diferentes formas 3D. Las tortugas se distribuyen aleatoriamente sobre la superficie de la forma. Haz clic en el botón ir (para siempre) para ejecutar el modelo.

IR comienza a rotar el modelo.

COLOR determina el color que se usa para simular profundidad al generar las diversas formas (usa constantes de NetLogo colores predefinidas).

NÚM-TURTLES determina el número de tortugas que se usan para generar las varias formas.

TAMAÑO-DE-FORMA determina el tamaño total de la forma. La mayoría de las veces es el radio o la longitud del borde.

VELOCIDAD-DE-THETA determina la velocidad a la que giran las tortugas.

(¡La rotación de tortugas en el procedimiento rotación-de-tortugas se implementa simplemente al aumentar la variable theta de cada tortuga por velocidad-de-theta! *Rotar* tortugas (alrededor del eje z) es fácil en coordenadas esféricas. Sin embargo, es mucho más fácil *transponer* tortugas en coordenadas cartesianas.)

##  COSAS PARA NOTAR

Tenga en cuenta que las tortugas más cercanas (positivas) en el eje y aparecen más claras en tono y las tortugas más alejadas (negativas) aparecen más oscuras en tono.

##  COSAS PARA INTENTAR

Trata de ajustar el control deslizante theta-vel o renderizar-color mientras se ejecuta el modelo. Esto proporcionará información en tiempo real sobre sus ajustes.

##  EXTENDIENDO EL MODELO

[FÁCIL] Ajuste el procedimiento `preparar-cuadrado` para generar un rectángulo.

Crea un procedimiento para transponer las coordenadas de la tortuga. Recuérdate que es más fácil transponer en coordenadas cartesianas.

Crea un procedimiento para generar nuevas geometrías 3D.

Intenta animar la variable phi. Conceptualmente, ¿por qué esto no tiene sentido?

Crea un procedimiento para rotar las geometrías en un eje diferente.

[MUY DIFÍCIL] Crea un procedimiento para ver las geometrías en CUALQUIER ángulo en lugar de los tres actuales.

##  CARACTERÍSTICAS DE NETLOGO

Observe el uso de `escala-de-color` para mostrar la profundidad de las tortugas y así simular 3D.

##  COMO CITAR 

Si mencionas este modelo o el software de NetLogo en una publicación, te pedimos que incluyes las citas aboajo.

Para el modelo:

* Wilensky, U. (1998).  NetLogo 3D Solids model.  http://ccl.northwestern.edu/netlogo/models/3DSolids.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Por favor cita el software de NetLogo como:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

##  DERECHOS DE AUTOR Y LICENCIA 

Copyright 1998 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

This model was created as part of the project: CONNECTED MATHEMATICS: MAKING SENSE OF COMPLEX PHENOMENA THROUGH BUILDING OBJECT-BASED PARALLEL MODELS (OBPML).  The project gratefully acknowledges the support of the National Science Foundation (Applications of Advanced Technologies Program) -- grant numbers RED #9552950 and REC #9632612.

This model was converted to NetLogo as part of the projects: PARTICIPATORY SIMULATIONS: NETWORK-BASED DESIGN FOR SYSTEMS LEARNING IN CLASSROOMS and/or INTEGRATED SIMULATION AND MODELING ENVIRONMENT. The project gratefully acknowledges the support of the National Science Foundation (REPP & ROLE programs) -- grant numbers REC #9814682 and REC-0126227. Converted from StarLogoT to NetLogo, 2001.

<!-- 1998 2001 -->

Traductora: Chelsea Guzman